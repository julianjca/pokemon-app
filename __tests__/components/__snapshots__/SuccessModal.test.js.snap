// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SuccessModal renders the text correctly 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .emotion-0 {
  font-weight: bold;
  color: inherit;
  font-size: 1.875rem;
}

@media (min-width: 720px) {
  .emotion-0 {
    font-size: 2.25rem;
  }
}

.emotion-0+.emotion-0 {
  margin-top: 15px;
}

.emotion-2 {
  font-weight: bold;
  color: inherit;
  font-size: 1.25rem;
}

.emotion-2+.emotion-2 {
  margin-top: 15px;
}

.emotion-4 {
  font-weight: bold;
  color: inherit;
  font-size: 1rem;
}

.emotion-4+.emotion-4 {
  margin-top: 15px;
}

.emotion-6 {
  margin: 20px 0 0;
}

.emotion-8 {
  height: 48px;
  padding: 0 1rem;
  border: 1px solid #193569;
  color: #193569;
  border-radius: 0.375rem;
  width: 100%;
  box-sizing: border-box;
}

.emotion-12 {
  background-color: #193569;
  border-radius: 0.5em;
  border: none;
  padding: 1em 1.2em;
  font-size: 1rem;
  font-weight: bold;
  color: #FDC903;
  cursor: pointer;
  -webkit-transition: 0.15s all ease-in-out;
  transition: 0.15s all ease-in-out;
  outline: none;
  width: 100%;
}

.emotion-12:hover {
  background-color: #152c57;
  -webkit-transition: 0.15s all ease-in-out;
  transition: 0.15s all ease-in-out;
}

<body>
    <div>
      <div>
        <h1
          class="emotion-0 emotion-1"
        >
          Congratulations!
        </h1>
        <h3
          class="emotion-2 emotion-1"
          style="font-weight: 500; margin-top: 10px;"
        >
          You have successfully catched this pokemon.
        </h3>
        <p
          class="emotion-4 emotion-1"
          style="margin-top: 10px; font-weight: 400;"
        >
          Give it a name:
        </p>
        <div
          class="emotion-6 emotion-7"
        >
          <input
            class="emotion-8 emotion-9"
            type="text"
            value=""
          />
        </div>
        <div
          class="emotion-6 emotion-7"
        >
          <button
            class="emotion-12 emotion-13"
          >
            Save!
          </button>
        </div>
      </div>
    </div>
  </body>,
  "container": .emotion-0 {
  font-weight: bold;
  color: inherit;
  font-size: 1.875rem;
}

@media (min-width: 720px) {
  .emotion-0 {
    font-size: 2.25rem;
  }
}

.emotion-0+.emotion-0 {
  margin-top: 15px;
}

.emotion-2 {
  font-weight: bold;
  color: inherit;
  font-size: 1.25rem;
}

.emotion-2+.emotion-2 {
  margin-top: 15px;
}

.emotion-4 {
  font-weight: bold;
  color: inherit;
  font-size: 1rem;
}

.emotion-4+.emotion-4 {
  margin-top: 15px;
}

.emotion-6 {
  margin: 20px 0 0;
}

.emotion-8 {
  height: 48px;
  padding: 0 1rem;
  border: 1px solid #193569;
  color: #193569;
  border-radius: 0.375rem;
  width: 100%;
  box-sizing: border-box;
}

.emotion-12 {
  background-color: #193569;
  border-radius: 0.5em;
  border: none;
  padding: 1em 1.2em;
  font-size: 1rem;
  font-weight: bold;
  color: #FDC903;
  cursor: pointer;
  -webkit-transition: 0.15s all ease-in-out;
  transition: 0.15s all ease-in-out;
  outline: none;
  width: 100%;
}

.emotion-12:hover {
  background-color: #152c57;
  -webkit-transition: 0.15s all ease-in-out;
  transition: 0.15s all ease-in-out;
}

<div>
    <div>
      <h1
        class="emotion-0 emotion-1"
      >
        Congratulations!
      </h1>
      <h3
        class="emotion-2 emotion-1"
        style="font-weight: 500; margin-top: 10px;"
      >
        You have successfully catched this pokemon.
      </h3>
      <p
        class="emotion-4 emotion-1"
        style="margin-top: 10px; font-weight: 400;"
      >
        Give it a name:
      </p>
      <div
        class="emotion-6 emotion-7"
      >
        <input
          class="emotion-8 emotion-9"
          type="text"
          value=""
        />
      </div>
      <div
        class="emotion-6 emotion-7"
      >
        <button
          class="emotion-12 emotion-13"
        >
          Save!
        </button>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
